// Code generated by protoc-gen-go. DO NOT EDIT.
// source: media_service.proto

package media_service

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Image struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId               string               `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	Filename             string               `protobuf:"bytes,3,opt,name=filename,proto3" json:"filename,omitempty"`
	Height               int32                `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	Width                int32                `protobuf:"varint,5,opt,name=width,proto3" json:"width,omitempty"`
	UniqId               string               `protobuf:"bytes,6,opt,name=uniqId,proto3" json:"uniqId,omitempty"`
	OrigImgId            string               `protobuf:"bytes,7,opt,name=origImgId,proto3" json:"origImgId,omitempty"`
	Url                  string               `protobuf:"bytes,8,opt,name=url,proto3" json:"url,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,9,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,10,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Image) Reset()         { *m = Image{} }
func (m *Image) String() string { return proto.CompactTextString(m) }
func (*Image) ProtoMessage()    {}
func (*Image) Descriptor() ([]byte, []int) {
	return fileDescriptor_cad0f3d72e604dd5, []int{0}
}

func (m *Image) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Image.Unmarshal(m, b)
}
func (m *Image) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Image.Marshal(b, m, deterministic)
}
func (m *Image) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Image.Merge(m, src)
}
func (m *Image) XXX_Size() int {
	return xxx_messageInfo_Image.Size(m)
}
func (m *Image) XXX_DiscardUnknown() {
	xxx_messageInfo_Image.DiscardUnknown(m)
}

var xxx_messageInfo_Image proto.InternalMessageInfo

func (m *Image) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Image) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Image) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *Image) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Image) GetWidth() int32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *Image) GetUniqId() string {
	if m != nil {
		return m.UniqId
	}
	return ""
}

func (m *Image) GetOrigImgId() string {
	if m != nil {
		return m.OrigImgId
	}
	return ""
}

func (m *Image) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Image) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Image) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type CreateImageData struct {
	UserId               string   `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Filename             string   `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	File                 []byte   `protobuf:"bytes,3,opt,name=file,proto3" json:"file,omitempty"`
	Height               int32    `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	Width                int32    `protobuf:"varint,5,opt,name=width,proto3" json:"width,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateImageData) Reset()         { *m = CreateImageData{} }
func (m *CreateImageData) String() string { return proto.CompactTextString(m) }
func (*CreateImageData) ProtoMessage()    {}
func (*CreateImageData) Descriptor() ([]byte, []int) {
	return fileDescriptor_cad0f3d72e604dd5, []int{1}
}

func (m *CreateImageData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateImageData.Unmarshal(m, b)
}
func (m *CreateImageData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateImageData.Marshal(b, m, deterministic)
}
func (m *CreateImageData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateImageData.Merge(m, src)
}
func (m *CreateImageData) XXX_Size() int {
	return xxx_messageInfo_CreateImageData.Size(m)
}
func (m *CreateImageData) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateImageData.DiscardUnknown(m)
}

var xxx_messageInfo_CreateImageData proto.InternalMessageInfo

func (m *CreateImageData) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *CreateImageData) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *CreateImageData) GetFile() []byte {
	if m != nil {
		return m.File
	}
	return nil
}

func (m *CreateImageData) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *CreateImageData) GetWidth() int32 {
	if m != nil {
		return m.Width
	}
	return 0
}

type UpdateImageData struct {
	UserId               *UserId          `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	ImageData            *CreateImageData `protobuf:"bytes,2,opt,name=imageData,proto3" json:"imageData,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *UpdateImageData) Reset()         { *m = UpdateImageData{} }
func (m *UpdateImageData) String() string { return proto.CompactTextString(m) }
func (*UpdateImageData) ProtoMessage()    {}
func (*UpdateImageData) Descriptor() ([]byte, []int) {
	return fileDescriptor_cad0f3d72e604dd5, []int{2}
}

func (m *UpdateImageData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateImageData.Unmarshal(m, b)
}
func (m *UpdateImageData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateImageData.Marshal(b, m, deterministic)
}
func (m *UpdateImageData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateImageData.Merge(m, src)
}
func (m *UpdateImageData) XXX_Size() int {
	return xxx_messageInfo_UpdateImageData.Size(m)
}
func (m *UpdateImageData) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateImageData.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateImageData proto.InternalMessageInfo

func (m *UpdateImageData) GetUserId() *UserId {
	if m != nil {
		return m.UserId
	}
	return nil
}

func (m *UpdateImageData) GetImageData() *CreateImageData {
	if m != nil {
		return m.ImageData
	}
	return nil
}

type UserId struct {
	UserId               string   `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserId) Reset()         { *m = UserId{} }
func (m *UserId) String() string { return proto.CompactTextString(m) }
func (*UserId) ProtoMessage()    {}
func (*UserId) Descriptor() ([]byte, []int) {
	return fileDescriptor_cad0f3d72e604dd5, []int{3}
}

func (m *UserId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserId.Unmarshal(m, b)
}
func (m *UserId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserId.Marshal(b, m, deterministic)
}
func (m *UserId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserId.Merge(m, src)
}
func (m *UserId) XXX_Size() int {
	return xxx_messageInfo_UserId.Size(m)
}
func (m *UserId) XXX_DiscardUnknown() {
	xxx_messageInfo_UserId.DiscardUnknown(m)
}

var xxx_messageInfo_UserId proto.InternalMessageInfo

func (m *UserId) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type Response struct {
	Images               []*Image `protobuf:"bytes,1,rep,name=images,proto3" json:"images,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_cad0f3d72e604dd5, []int{4}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetImages() []*Image {
	if m != nil {
		return m.Images
	}
	return nil
}

func init() {
	proto.RegisterType((*Image)(nil), "media_service.Image")
	proto.RegisterType((*CreateImageData)(nil), "media_service.CreateImageData")
	proto.RegisterType((*UpdateImageData)(nil), "media_service.UpdateImageData")
	proto.RegisterType((*UserId)(nil), "media_service.UserId")
	proto.RegisterType((*Response)(nil), "media_service.Response")
}

func init() { proto.RegisterFile("media_service.proto", fileDescriptor_cad0f3d72e604dd5) }

var fileDescriptor_cad0f3d72e604dd5 = []byte{
	// 423 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x52, 0x41, 0xaf, 0x93, 0x40,
	0x10, 0x76, 0xe9, 0x03, 0xcb, 0x50, 0x7d, 0x66, 0x7d, 0xea, 0x86, 0x18, 0x25, 0x9c, 0x38, 0x28,
	0x2f, 0xc1, 0xcb, 0x3b, 0x78, 0xf0, 0x45, 0x13, 0xcb, 0xc1, 0x0b, 0xda, 0xb3, 0xa1, 0xdd, 0x2d,
	0xdd, 0x04, 0x0a, 0xc2, 0xa2, 0x37, 0xaf, 0xfe, 0x22, 0xff, 0x91, 0x3f, 0xc4, 0x30, 0x40, 0x69,
	0xd1, 0xb6, 0x79, 0xb7, 0x99, 0xf9, 0xe6, 0x9b, 0xf9, 0xe6, 0xdb, 0x85, 0xc7, 0x99, 0xe0, 0x32,
	0xfe, 0x5a, 0x89, 0xf2, 0xbb, 0x5c, 0x09, 0xbf, 0x28, 0x73, 0x95, 0xd3, 0x07, 0x07, 0x45, 0xfb,
	0x65, 0x92, 0xe7, 0x49, 0x2a, 0xae, 0x11, 0x5c, 0xd6, 0xeb, 0x6b, 0x25, 0x33, 0x51, 0xa9, 0x38,
	0x2b, 0xda, 0x7e, 0xf7, 0xb7, 0x06, 0x7a, 0x98, 0xc5, 0x89, 0xa0, 0x0f, 0x41, 0x93, 0x9c, 0x11,
	0x87, 0x78, 0x66, 0xa4, 0x49, 0x4e, 0x9f, 0x82, 0x51, 0x57, 0xa2, 0x0c, 0x39, 0xd3, 0xb0, 0xd6,
	0x65, 0xd4, 0x86, 0xe9, 0x5a, 0xa6, 0x62, 0x1b, 0x67, 0x82, 0x4d, 0x10, 0xd9, 0xe5, 0x0d, 0x67,
	0x23, 0x64, 0xb2, 0x51, 0xec, 0xc2, 0x21, 0x9e, 0x1e, 0x75, 0x19, 0xbd, 0x02, 0xfd, 0x87, 0xe4,
	0x6a, 0xc3, 0x74, 0x2c, 0xb7, 0x09, 0x6e, 0xd8, 0xca, 0x6f, 0x21, 0x67, 0x46, 0xb7, 0x01, 0x33,
	0xfa, 0x1c, 0xcc, 0xbc, 0x94, 0x49, 0x98, 0x25, 0x21, 0x67, 0xf7, 0x11, 0x1a, 0x0a, 0xf4, 0x11,
	0x4c, 0xea, 0x32, 0x65, 0x53, 0xac, 0x37, 0x21, 0xbd, 0x01, 0x73, 0x55, 0x8a, 0x58, 0x09, 0x7e,
	0xab, 0x98, 0xe9, 0x10, 0xcf, 0x0a, 0x6c, 0xbf, 0x3d, 0xdc, 0xef, 0x0f, 0xf7, 0xbf, 0xf4, 0x87,
	0x47, 0x43, 0x73, 0xc3, 0xac, 0x0b, 0xde, 0x31, 0xe1, 0x3c, 0x73, 0xd7, 0xec, 0xfe, 0x22, 0x70,
	0xf9, 0x1e, 0xe7, 0xa0, 0x7b, 0x1f, 0x62, 0x15, 0xef, 0x39, 0x46, 0x8e, 0x3a, 0xa6, 0x8d, 0x1c,
	0xa3, 0x70, 0xd1, 0xc4, 0xe8, 0xe4, 0x2c, 0xc2, 0xf8, 0x6e, 0x2e, 0xba, 0x3f, 0xe1, 0x72, 0x81,
	0xb2, 0x06, 0x21, 0xaf, 0x0f, 0x84, 0x58, 0xc1, 0x13, 0xff, 0xf0, 0xab, 0x2c, 0x10, 0xdc, 0xe9,
	0x7b, 0x0b, 0xa6, 0xec, 0xb9, 0x28, 0xd0, 0x0a, 0x5e, 0x8c, 0x18, 0xa3, 0x53, 0xa3, 0x81, 0xe0,
	0x3a, 0x60, 0xb4, 0xf3, 0x8e, 0xdd, 0xef, 0xde, 0xc0, 0x34, 0x12, 0x55, 0x91, 0x6f, 0x2b, 0x41,
	0x5f, 0x81, 0x81, 0xd4, 0x8a, 0x11, 0x67, 0xe2, 0x59, 0xc1, 0xd5, 0x68, 0x11, 0xae, 0x88, 0xba,
	0x9e, 0xe0, 0x0f, 0x81, 0xd9, 0xa7, 0x06, 0xff, 0xdc, 0xc2, 0x74, 0x0e, 0xd6, 0x9e, 0x14, 0x7a,
	0x46, 0xa6, 0xfd, 0x6c, 0x84, 0xf7, 0x32, 0xdc, 0x7b, 0xf4, 0x1d, 0xcc, 0x3e, 0x0a, 0x75, 0x9b,
	0xa6, 0xd8, 0x5d, 0xd1, 0xff, 0x7b, 0x74, 0x6a, 0xc2, 0x1c, 0xac, 0x3d, 0xe3, 0xff, 0xd1, 0x32,
	0x7a, 0x94, 0x13, 0x93, 0x96, 0x06, 0xfe, 0xb5, 0x37, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x6a,
	0xe4, 0x53, 0x76, 0xd2, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MediaServiceClient is the client API for MediaService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MediaServiceClient interface {
	CreateImage(ctx context.Context, in *CreateImageData, opts ...grpc.CallOption) (*Response, error)
	GetAllImages(ctx context.Context, in *UserId, opts ...grpc.CallOption) (*Response, error)
	UpdateImage(ctx context.Context, in *UpdateImageData, opts ...grpc.CallOption) (*Response, error)
}

type mediaServiceClient struct {
	cc *grpc.ClientConn
}

func NewMediaServiceClient(cc *grpc.ClientConn) MediaServiceClient {
	return &mediaServiceClient{cc}
}

func (c *mediaServiceClient) CreateImage(ctx context.Context, in *CreateImageData, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/media_service.MediaService/CreateImage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mediaServiceClient) GetAllImages(ctx context.Context, in *UserId, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/media_service.MediaService/GetAllImages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mediaServiceClient) UpdateImage(ctx context.Context, in *UpdateImageData, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/media_service.MediaService/UpdateImage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MediaServiceServer is the server API for MediaService service.
type MediaServiceServer interface {
	CreateImage(context.Context, *CreateImageData) (*Response, error)
	GetAllImages(context.Context, *UserId) (*Response, error)
	UpdateImage(context.Context, *UpdateImageData) (*Response, error)
}

func RegisterMediaServiceServer(s *grpc.Server, srv MediaServiceServer) {
	s.RegisterService(&_MediaService_serviceDesc, srv)
}

func _MediaService_CreateImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateImageData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MediaServiceServer).CreateImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/media_service.MediaService/CreateImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MediaServiceServer).CreateImage(ctx, req.(*CreateImageData))
	}
	return interceptor(ctx, in, info, handler)
}

func _MediaService_GetAllImages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MediaServiceServer).GetAllImages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/media_service.MediaService/GetAllImages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MediaServiceServer).GetAllImages(ctx, req.(*UserId))
	}
	return interceptor(ctx, in, info, handler)
}

func _MediaService_UpdateImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateImageData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MediaServiceServer).UpdateImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/media_service.MediaService/UpdateImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MediaServiceServer).UpdateImage(ctx, req.(*UpdateImageData))
	}
	return interceptor(ctx, in, info, handler)
}

var _MediaService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "media_service.MediaService",
	HandlerType: (*MediaServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateImage",
			Handler:    _MediaService_CreateImage_Handler,
		},
		{
			MethodName: "GetAllImages",
			Handler:    _MediaService_GetAllImages_Handler,
		},
		{
			MethodName: "UpdateImage",
			Handler:    _MediaService_UpdateImage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "media_service.proto",
}
